/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kde_salud;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import javax.swing.table.DefaultTableModel;
import metodokde.Capa;
import metodokde.CapaPuntos;
import metodokde.CoordenadaUTM;
import metodokde.FrmPrincipal;
import metodokde.ItemsMenuPpal;
import metodokde.Utilidades;

/**
 *
 * @author Johana
 */
public class Filtros extends javax.swing.JFrame {

    /**
     * Creates new form Filtros
     */
    private ArrayList<Punto> listaPuntos;
    private final ArrayList<String> listaCampo;
    ArrayList<Punto> listaPuntos2= new ArrayList<>();
    private  LinkedHashMap<String, Capa> mapaCapasKML = new LinkedHashMap<>();
    private ArrayList<Punto> listaLugares;
    
    public Filtros(ArrayList<Punto> listaPunto, ArrayList<String> listaCampos,LinkedHashMap<String, Capa> mapaCapasKML, ArrayList<Punto> listaLugares) {
        initComponents();
        this.listaPuntos = listaPunto;
        this.listaCampo = listaCampos;
        this.listaPuntos2= listaPuntos;
         this.mapaCapasKML = mapaCapasKML;
        this.listaLugares = listaLugares;
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        botonFiltrar = new javax.swing.JButton();
        Combo1 = new javax.swing.JComboBox<>();
        campo1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TFdesde = new javax.swing.JTextField();
        TFhasta = new javax.swing.JTextField();
        Combo2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtrar Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14))); // NOI18N

        jLabel1.setText("Seleccione valor a filtrar");

        jLabel2.setText("Valor");

        botonFiltrar.setText("Aplicar Filtros");
        botonFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFiltrarActionPerformed(evt);
            }
        });

        Combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Combo1ActionPerformed(evt);
            }
        });

        campo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Rango");

        TFdesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFdesdeActionPerformed(evt);
            }
        });

        TFhasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFhastaActionPerformed(evt);
            }
        });

        Combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Igual", "Mayor que", "Menor que ", "Diferente a", "Rango" }));

        jButton1.setText("Metodo KDE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Desde");

        jLabel5.setText("Hasta");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Combo2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(campo1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TFdesde, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TFhasta, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(Combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFhasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(TFdesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(botonFiltrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabla de datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14))); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFiltrarActionPerformed
        listaPuntos2 = new ArrayList<>();
        for (Capa valor : mapaCapasKML.values()) {
            System.out.print(valor + "-");
        }
        for (int i = 0; i < listaPuntos.size(); i++) {
            Iterator<String> it = listaPuntos.get(i).getMapaDatos().keySet().iterator();

            while (it.hasNext()) {
                String key = it.next();

                if (Combo2.getSelectedItem().toString().equals("Igual")) {

                    if (Combo1.getSelectedItem().toString().equals(key) && campo1.getText().equals(listaPuntos.get(i).getMapaDatos().get(key))) {

                        listaPuntos2.add(listaPuntos.get(i));
                    }
                } else if (Combo2.getSelectedItem().toString().equals("Mayor que")) {

                    if (Combo1.getSelectedItem().toString().equals(key)) {
                        int a = Integer.parseInt(campo1.getText());
                        int b = Integer.parseInt(listaPuntos.get(i).getMapaDatos().get(key));
                        if (b > a) {
                            listaPuntos2.add(listaPuntos.get(i));
                        }

                    }
                } else if (Combo2.getSelectedItem().toString().equals("Menor que")) {

                    if (Combo1.getSelectedItem().toString().equals(key)) {
                        int a = Integer.parseInt(campo1.getText());
                        int b = Integer.parseInt(listaPuntos.get(i).getMapaDatos().get(key));
                        if (b < a) {
                            listaPuntos2.add(listaPuntos.get(i));
                        }
                    }
                } else if (Combo2.getSelectedItem().toString().equals("Diferente a")) {
                    if (Combo1.getSelectedItem().toString().equals(key) && !campo1.getText().equals(listaPuntos.get(i).getMapaDatos().get(key))) {
                        listaPuntos2.add(listaPuntos.get(i));
                    }

                } else if (Combo2.getSelectedItem().toString().equals("Rango")) {
                    if (TFdesde.getText().length() != 0 && TFhasta.getText().length() != 0) {
                        
                        if (Combo1.getSelectedItem().toString().equals(key)) {
                            int desde = Integer.parseInt(TFdesde.getText());
                            int punto = Integer.parseInt(listaPuntos.get(i).getMapaDatos().get(key));
                            int hasta = Integer.parseInt(TFhasta.getText());
                            if (punto >= desde && punto <= hasta) {
                                listaPuntos2.add(listaPuntos.get(i));
                            }

                        }
                    }

                }

            }

        }

        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();

        int numDatos = listaPuntos.size();
        for (int i = 0; numDatos > i; i++) {

            modelo.removeRow(0);

        }
        modelo.removeTableModelListener(jTable2);

        recargarTabla(listaPuntos2);


    }//GEN-LAST:event_botonFiltrarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        recargarTabla(listaPuntos);

        
    }//GEN-LAST:event_formWindowOpened
    
    public void recargarTabla(ArrayList<Punto> listaPuntos){
        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
        
       
            for (int i = 0; i < listaCampo.size(); i++) {
            modelo.addColumn(listaCampo.get(i));
        }
        
        

        for (int i = 0; i < listaPuntos.size(); i++) {

            int tamano = listaCampo.size();
            String row[] = new String[tamano];
            int j = 0;
            //Iterator iterator = listaPuntos.get(i).getMapaDatos().entrySet().iterator();
            //listaOrdenada = orden(listaPuntos.get(i).getMapaDatos());
            //listaPuntos.get(i).getMapaDatos().entrySet() 
            for (Map.Entry<String, String> entry : listaPuntos.get(i).getMapaDatos().entrySet()) {
                //System.out.println(listaPuntos.get(i).getMapaDatos().entrySet());
                if (listaPuntos.get(i).getMapaDatos().size()== tamano) {
                    row[j] = entry.getValue();
                    j++;
                }                    
                    //System.out.println(entry.getKey() + " = " + entry.getValue());
                 else { 
                        if (entry.getKey().equals(modelo.getColumnName(j))) {  
                            row[j] = entry.getValue(); 
                            j++;
                        } else  {
                            while((!(entry.getKey().equals(modelo.getColumnName(j))))&& j<=tamano){
                                row[j] = " ";
                                j++;
                            }
                           if (entry.getKey().equals(modelo.getColumnName(j))) {  
                            row[j] = entry.getValue(); 
                            j++;
                            }else{
                               break;
                            }                    
                        }
                }  
            }
            modelo.addRow(row);
        }
        
       
        
        
        //--------------------------------------
           for (int i = 0; i < listaCampo.size(); i++) { //asignar valores al combo
            Combo1.addItem(listaCampo.get(i));
        }
        //--------------------------------------
    }
    
    private void Combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Combo1ActionPerformed
//        for (int i = 0; i < listaCampo.size(); i++) {
//            Combo1.addItem(listaCampo.get(i));
//        }
       
    }//GEN-LAST:event_Combo1ActionPerformed

    private void TFdesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFdesdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFdesdeActionPerformed

    private void TFhastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFhastaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFhastaActionPerformed

    private void campo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FrmPrincipal frmPrincipal = new FrmPrincipal(listaPuntos2,mapaCapasKML, this.listaLugares);
        frmPrincipal.setExtendedState(FrmPrincipal.MAXIMIZED_BOTH);
        frmPrincipal.setVisible(true);
        this.dispose();
        frmPrincipal.abrirItemMenu(ItemsMenuPpal.MOSTRAR_KDE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private HashMap<String, String> orden(HashMap<String, String> mapa) {
        Iterator it = mapa.entrySet().iterator();
        ArrayList listaClaves = new ArrayList();
        while (it.hasNext()) {
            Map.Entry entrada = (Map.Entry) it.next();
            listaClaves.add(entrada.getKey());
        }

        Collections.sort(listaClaves);
        //listaClaves.stream().forEach(clave -> System.out.println(clave + " : " + mapa.get(clave)));
        return mapa;
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Combo1;
    private javax.swing.JComboBox<String> Combo2;
    private javax.swing.JTextField TFdesde;
    private javax.swing.JTextField TFhasta;
    private javax.swing.JButton botonFiltrar;
    private javax.swing.JTextField campo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
